{"ast":null,"code":"var _jsxFileName = \"/Users/yousefgadban/Documents/bootcamp/bank/src/Account/Account.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from 'react-router-dom';\nimport { GetUserData, GetAllAction, AddWithDrawal, GetAllUsers, TransferCash } from '../api/api';\nimport './account.css';\nimport { AllActions } from \"./actions/AllActions\";\nimport { Transfer } from \"./actions/Transfer\";\nimport { WithDrawal } from \"./actions/WithDrawal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Account = props => {\n  _s();\n\n  const {\n    id,\n    pass\n  } = useParams();\n  const [user, setUser] = useState(null);\n  const [allActions, setAllActions] = useState([]);\n  const [currentAmount, setCurrentAmount] = useState(0);\n  const [display, setDisplay] = useState('none');\n  useEffect(() => {\n    console.log('two params ', id, pass); // get user data from db\n\n    GetUserData(id).then(response => {\n      let currentUser = response.data.data;\n      console.log(currentUser);\n      setUser(currentUser);\n      setCurrentAmount(currentUser.balance);\n      GetAllAction(id).then(response => {\n        let allActions = response.data;\n        console.log(allActions);\n        setAllActions(allActions.data); //calculateCurrentAmount();\n      });\n    });\n  }, []);\n\n  const calculateCurrentAmount = () => {\n    let amount = allActions.reduce((prev, action) => {\n      return prev + (action.isWithDrawal ? -action.cash : action.cash);\n    }, 0);\n    setCurrentAmount(amount);\n  };\n\n  useEffect(() => {\n    console.log('allActions', allActions); //calculateCurrentAmount();\n  }, [allActions]);\n\n  const onAllActionsClicked = () => {\n    console.log('onAllActionsClicked');\n    setDisplay('allActions');\n  };\n\n  const onWithDrawalClicked = () => {\n    console.log('onWithDrawalClicked');\n    setDisplay('withDrawal');\n  };\n\n  const onTransferClicked = () => {\n    console.log('onTransferClicked');\n    setDisplay('transfer');\n  };\n\n  const onWithDrawalCash = amount => {\n    console.log('onWithDrawalCash', typeof amount);\n\n    if (currentAmount - amount >= -5000) {\n      console.log('do withdrawal');\n      let params = {\n        userId: id,\n        amount: +amount,\n        isWithDrawal: true,\n        using: 'A.T.M'\n      };\n      AddWithDrawal(params).then(response => {\n        let actionResponse = response.data;\n        console.log(actionResponse);\n\n        if (response.status === 201) {\n          setCurrentAmount(prevAmount => prevAmount - +amount);\n        } else {\n          console.log('somthing wrong, try again later');\n        }\n      });\n    } else {\n      console.log('invalid amount to withdrawal');\n    }\n  };\n\n  const onTransferCash = (Amount, ToAccount) => {\n    let amount = +Amount;\n    let toAccount = ToAccount;\n    console.log('onTransferCash', amount, toAccount); // GetAllUsers().then((response)=>{\n    //     let allUsers = response.data;\n    //     console.log(allUsers);\n    //     let transferToUser = allUsers.find((user) => {\n    //         return user.accountNumber === toAccount\n    //     })\n    //     if (transferToUser === undefined) {\n    //         console.log('No such account');\n    //     } else {\n    //         console.log('transfer ', transferToUser.id);\n    //         let params = {\n    //             customerId: id,\n    //             cash: amount,\n    //             isWithDrawal: true,\n    //             transaction: `Transfer to account ${toAccount}`\n    //         }\n    //         TransferCash(params).then((response)=>{\n    //             let actionResponse = response.data;\n    //             console.log(actionResponse);\n    //             if (response.status === 201) {\n    //                 setCurrentAmount((prevAmount) => prevAmount - amount);\n    //                 let params = {\n    //                     customerId: transferToUser.id,\n    //                     cash: amount,\n    //                     isWithDrawal: false,\n    //                     transaction: `Get from account ${toAccount}`\n    //                 }\n    //                 TransferCash(params).then((response)=>{\n    //                     let actionResponse = response.data;\n    //                     console.log(actionResponse);\n    //                 });\n    //             } else {\n    //                 console.log('somthing wrong, try again later');\n    //             }\n    //         });\n    //     }\n    // });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: [console.log('display', display), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"account-profile\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"account-profile-img\",\n        alt: \"\",\n        src: user ? user.avatar : 'https://cdn.fakercloud.com/avatars/thiagovernetti_128.jpg'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Welcome: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: user ? user.name : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Account Number: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: user ? user.accountNumber : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 40\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Current amount: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [currentAmount, \" \\u20AA\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 40\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"account-btn\",\n        type: \"button\",\n        value: \"All Actions\",\n        onClick: e => {\n          onAllActionsClicked();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"account-btn\",\n        type: \"button\",\n        value: \"WithDrawal\",\n        onClick: e => {\n          onWithDrawalClicked();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"account-btn\",\n        type: \"button\",\n        value: \"Transfer\",\n        onClick: e => {\n          onTransferClicked();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"account-transfer\",\n      children: [/*#__PURE__*/_jsxDEV(WithDrawal, {\n        display: display,\n        onWithDrawalCash: onWithDrawalCash\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Transfer, {\n        display: display,\n        onTransferCash: onTransferCash\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: display === 'allActions' ? 'block' : 'none'\n        },\n        children: /*#__PURE__*/_jsxDEV(AllActions, {\n          display: display,\n          allActions: allActions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Account, \"yjac++6HQ0EEFQ3KzKm6u8byhI8=\", false, function () {\n  return [useParams];\n});\n\n_c = Account;\n\nvar _c;\n\n$RefreshReg$(_c, \"Account\");","map":{"version":3,"sources":["/Users/yousefgadban/Documents/bootcamp/bank/src/Account/Account.js"],"names":["React","useState","useEffect","useParams","GetUserData","GetAllAction","AddWithDrawal","GetAllUsers","TransferCash","AllActions","Transfer","WithDrawal","Account","props","id","pass","user","setUser","allActions","setAllActions","currentAmount","setCurrentAmount","display","setDisplay","console","log","then","response","currentUser","data","balance","calculateCurrentAmount","amount","reduce","prev","action","isWithDrawal","cash","onAllActionsClicked","onWithDrawalClicked","onTransferClicked","onWithDrawalCash","params","userId","using","actionResponse","status","prevAmount","onTransferCash","Amount","ToAccount","toAccount","flexDirection","justifyContent","alignItems","avatar","name","accountNumber","e"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport { useParams  } from 'react-router-dom';\nimport { GetUserData, GetAllAction, AddWithDrawal, GetAllUsers, TransferCash } from '../api/api'\nimport './account.css'\nimport { AllActions } from \"./actions/AllActions\";\n\nimport { Transfer } from \"./actions/Transfer\";\nimport { WithDrawal } from \"./actions/WithDrawal\";\n\n\nexport const Account = (props) => {\n\n    const { id, pass } = useParams();\n    const [user, setUser] = useState(null);\n    const [allActions, setAllActions] = useState([]);\n    const [currentAmount, setCurrentAmount] = useState(0);\n    const [display, setDisplay] = useState('none');\n\n    useEffect(()=>{\n\n        console.log('two params ', id, pass);\n        // get user data from db\n        GetUserData(id).then((response)=>{\n            let currentUser = response.data.data;\n            console.log(currentUser);\n            setUser(currentUser);\n            setCurrentAmount(currentUser.balance)\n\n            GetAllAction(id).then((response)=>{\n                let allActions = response.data;\n                console.log(allActions);\n                setAllActions(allActions.data);\n                \n                //calculateCurrentAmount();\n            });\n        });\n        \n    }, []);\n\n\n    const calculateCurrentAmount = () => {\n        let amount = allActions.reduce((prev, action) => {\n            return  prev + (action.isWithDrawal ? -action.cash : action.cash);\n        }, 0)\n        setCurrentAmount(amount);\n    }\n\n    useEffect(()=>{\n        console.log('allActions', allActions);\n        //calculateCurrentAmount();\n    }, [allActions]);\n\n    const onAllActionsClicked = () => {\n        console.log('onAllActionsClicked');\n        setDisplay('allActions');\n    }\n\n    const onWithDrawalClicked = () => {\n        console.log('onWithDrawalClicked');\n        setDisplay('withDrawal');\n    }\n\n    const onTransferClicked = () => {\n        console.log('onTransferClicked');\n        setDisplay('transfer');\n    }\n\n    const onWithDrawalCash = (amount) => {\n        console.log('onWithDrawalCash', typeof amount);\n\n        if (currentAmount - amount >= -5000) {\n            console.log('do withdrawal');\n\n            let params = {\n                userId: id,\n                amount: +amount,\n                isWithDrawal: true,\n                using: 'A.T.M'\n            }\n            \n            AddWithDrawal(params).then((response)=>{\n                let actionResponse = response.data;\n                console.log(actionResponse);\n                if (response.status === 201) {\n                    setCurrentAmount((prevAmount) => prevAmount - +amount);\n                } else {\n                    console.log('somthing wrong, try again later');\n                }\n            });\n\n        } else {\n            console.log('invalid amount to withdrawal');\n        }\n    }\n\n    const onTransferCash = (Amount, ToAccount) => {\n        let amount = +Amount;\n        let toAccount = ToAccount;\n        console.log('onTransferCash', amount, toAccount);\n\n        // GetAllUsers().then((response)=>{\n        //     let allUsers = response.data;\n        //     console.log(allUsers);\n            \n        //     let transferToUser = allUsers.find((user) => {\n        //         return user.accountNumber === toAccount\n        //     })\n            \n        //     if (transferToUser === undefined) {\n        //         console.log('No such account');\n        //     } else {\n \n        //         console.log('transfer ', transferToUser.id);\n                \n        //         let params = {\n        //             customerId: id,\n        //             cash: amount,\n        //             isWithDrawal: true,\n        //             transaction: `Transfer to account ${toAccount}`\n        //         }\n                \n        //         TransferCash(params).then((response)=>{\n        //             let actionResponse = response.data;\n        //             console.log(actionResponse);\n        //             if (response.status === 201) {\n        //                 setCurrentAmount((prevAmount) => prevAmount - amount);\n\n        //                 let params = {\n        //                     customerId: transferToUser.id,\n        //                     cash: amount,\n        //                     isWithDrawal: false,\n        //                     transaction: `Get from account ${toAccount}`\n        //                 }\n\n        //                 TransferCash(params).then((response)=>{\n        //                     let actionResponse = response.data;\n        //                     console.log(actionResponse);\n        //                 });\n\n        //             } else {\n        //                 console.log('somthing wrong, try again later');\n        //             }\n        //         });\n        //     }\n        // });\n    }\n\n    return(\n        \n        <div style={{display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center'}}>\n            {console.log('display', display)}\n            <div className=\"account-profile\">\n                <img className=\"account-profile-img\" alt=\"\" src={user ? user.avatar : 'https://cdn.fakercloud.com/avatars/thiagovernetti_128.jpg'} />\n                <div>\n                    <p>Welcome: <span>{user ? user.name : ''}</span></p>\n                    <p>Account Number: <span>{user ? user.accountNumber : ''}</span></p>\n                    <p>Current amount: <span>{currentAmount} &#8362;</span></p>\n                </div>\n            </div>\n\n            <br />\n            <div>\n                <input className=\"account-btn\" type=\"button\" value=\"All Actions\" onClick={(e) => {onAllActionsClicked()}} />\n                <input className=\"account-btn\" type=\"button\" value=\"WithDrawal\" onClick={(e) => {onWithDrawalClicked()}} />\n                <input className=\"account-btn\" type=\"button\" value=\"Transfer\" onClick={(e) => {onTransferClicked()}} />\n            </div>\n            <br />\n            <div className=\"account-transfer\" >\n                \n                <WithDrawal display={display}  onWithDrawalCash={onWithDrawalCash} />\n                <Transfer display={display} onTransferCash={onTransferCash} />\n                \n                <div style={{display: display === 'allActions' ? 'block' : 'none'}}>\n\n                <AllActions display={display}  allActions={allActions} />\n                </div>\n            </div>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}